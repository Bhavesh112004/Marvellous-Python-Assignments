import psutil
import time
import os
import sys
import smtplib
import ssl
from email.message import EmailMessage


def send_log_file_via_email(log_file_path, sender_email, sender_password, recipient_email):
    subject = "Process Log File"
    body = "Attached is the process log file generated by your automation script."

    msg = EmailMessage()
    msg['From'] = sender_email
    msg['To'] = recipient_email

    msg['Subject'] = subject
    msg.set_content(body)

    
    fobj = open(log_file_path, 'rb')
    file_data = fobj.read()
    file_name = os.path.basename(log_file_path)
    fobj.close()

    # Attach the file data
    msg.add_attachment(file_data, maintype='application', subtype='octet-stream', filename=file_name)

    # Create SSL context and SMTP object
    context = ssl.create_default_context()
    smtp = smtplib.SMTP_SSL('smtp.gmail.com', 465, context=context)
    smtp.login(sender_email, sender_password)
    smtp.send_message(msg)
    smtp.quit()

    print(" Email sent successfully.")


def CreateLogDirectory(FolderName, recipient_email):
    if not os.path.exists(FolderName):
        os.mkdir(FolderName)

    timestamp = time.ctime()
    Border = "-"*90

    file_name = "Process%s.txt" % timestamp
    file_name = file_name.replace(" ","_")
    file_name = file_name.replace(":","_")
    file_path = os.path.join(FolderName, file_name)
    
    fobj = open(file_path, "w")

    fobj.write(Border + "\n")
    fobj.write("-----------------------------Welcome to the ProcessInfo automation script-----------------------------------\n")
    fobj.write(Border + "\n\n")

    for proc in psutil.process_iter():
        if proc.is_running():
            try:
                info = proc.as_dict(attrs=['pid','name','username'])
                info['vms'] = proc.memory_info().vms / (1024 * 1024)
                fobj.write(str(info) + "\n")
            except Exception:
                print("Exception occurred")
        else:
            print("Process is not running")

    fobj.write(Border + "\n")
    fobj.write("-----------------------------------------End of Automation script ---------------------------\n")
    fobj.write("-----------------------------------Thanks for using the automation script-----------------------------------------\n")
    print(Border + "\n")

    fobj.close()

    
    send_log_file_via_email(
        log_file_path=file_path,
        sender_email="ahirebhavesh9156@gmail.com",
        sender_password="nuvssqdcvmkhebeg",
        recipient_email=recipient_email
    )


def CreateLogDirectory(FolderName, recipient_email):
    if not os.path.exists(FolderName):
        os.mkdir(FolderName)

    timestamp = time.ctime()
    Border = "-"*90

    file_name = "Process%s.log" % timestamp
    file_name = file_name.replace(" ","_")
    file_name = file_name.replace(":","_")
    file_path = os.path.join(FolderName, file_name)
    
    fobj = open(file_path, "w")
    fobj.write(Border + "\n")
    fobj.write("-----------------------------Welcome to the ProcessInfo automation script-----------------------------------\n")
    fobj.write(Border + "\n\n")

    for proc in psutil.process_iter():
        if proc.is_running():
            try:
                info = proc.as_dict(attrs=['pid','name','username'])
                info['vms'] = proc.memory_info().vms / (1024 * 1024)
                fobj.write(str(info) + "\n")
            except Exception:
                print("Exception occurred")
        else:
            print("Process is not running")

    fobj.write(Border + "\n")
    fobj.write("-----------------------------------------End of Automation script ---------------------------\n")
    fobj.write("-----------------------------------Thanks for using the automation script-----------------------------------------\n")
    print(Border + "\n")

    fobj.close()

    # Send email
    send_log_file_via_email(
        log_file_path=file_path,
        sender_email="ahirebhavesh9156@gmail.com",
        sender_password="eahlfkryduwvqxur",
        recipient_email=recipient_email
    )

def main():
    if len(sys.argv) == 3:
        FolderName = sys.argv[1]
        recipient_email = sys.argv[2]

        CreateLogDirectory(FolderName, recipient_email)
        Border = "-"*90
        print(Border)
        print("Information of currently running processess: ")
        print(Border)

    elif len(sys.argv) == 2 and (sys.argv[1] == "--h" or sys.argv[1] == "--H"):
        print("Help:")
        print("This script logs running processes and emails the log file.")
        print("Usage: python program_name.py <DirectoryName> <RecipientEmail>")

    elif len(sys.argv) == 2 and (sys.argv[1] == "--u" or sys.argv[1] == "--U"):
        print("Usage Example:")
        print("python program_name.py logs_folder someone@example.com")

    else:
        print("Invalid number of arguments")
        print("Use --h : for help")
        print("Use --u : for usage")


if __name__ == "__main__":
    main()
